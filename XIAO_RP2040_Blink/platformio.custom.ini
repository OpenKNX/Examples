;Hier können build_flags gesetzt werden für realease und delevop
[custom]
board = seeed_xiao_rp2040
build_flags =
  ;-D OPENKNX_WATCHDOG
lib_deps = 
  adafruit/Adafruit NeoPixel@^1.10.7

;Hier können build_flags gesetzt werden, die nur für develop beachtet werden
[custom_develop]
extends = custom
build_flags =
  ${custom.build_flags}
  -D OPENKNX_HEARTBEAT

;Hier können build_flags gesetzt werden, die nur für release beachtet werden
[custom_releases]
extends = custom
build_flags =
  ${custom.build_flags}

; RP2040
[RP2040_custom]
extends = RP2040, custom
build_flags =
  -D OPENKNX_RUNTIME_STAT
  ;-D DUMMY_FLASH_OFFSET=0xF3000    ;Damit kann ein Speicherbereich reserviert werden
  ;-D DUMMY_FLASH_SIZE=0x1000
  -D SERIAL_DEBUG=Serial            ;Angabe der Serial
  ;-D OPENKNX_RTT                   ;Anstelle von SERIAL_DEBUG kann auch per RTT geloggt werden
  ${KNX_TP.build_flags}



;Ab hier werden die Umgebungen erstellt.
;Es können verschiedene Hardware unterstütz werden, je nach Umgebung
;Eine Umgebung erweitert immer verschiedene Eigenschaften
;z.B. RP2040_16MB, RP2040_2MB, RP2040_UPLOAD_USB]
[env:develop_RP2040]
extends = RP2040_develop, custom_develop, RP2040_custom
build_flags =
  ${RP2040_develop.build_flags}
  ${custom_develop.build_flags}
  ${RP2040_custom.build_flags}
  -D OKNXHW_REG1_CONTROLLER2040 ;Hier kann die Hardware angegeben werden, wenn diese in der OpenKnxHardware.h unterstützt wird

[env:develop_RP2040_DUALCORE]
extends = env:develop_RP2040, RP2040_custom
build_flags =
  ${env:develop_RP2040.build_flags}
  ${RP2040_custom.build_flags}
  -D OPENKNX_DUALCORE

;Ab hier werden den verschiedenen Umgebungen auch unterschiedliche Uploadmethoden hinzugefügt
;USB oder JLINK
[env:develop_RP2040_USB]
extends = env:develop_RP2040, RP2040_UPLOAD_USB

[env:develop_RP2040_JLINK]
extends = env:develop_RP2040, UPLOAD_JLINK

[env:develop_RP2040_DUALCORE_USB]
extends = env:develop_RP2040_DUALCORE, RP2040_UPLOAD_USB

[env:develop_RP2040_DUALCORE_JLINK]
extends = env:develop_RP2040_DUALCORE, UPLOAD_JLINK